{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/MyPost/MyPost.module.css","components/Profile/MyPosts/MyPost/MyPost.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatuWithHocks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","MyPost","props","img","className","s","item","logo__inner","src","alt","post","text","message","like__inner","like","likecount","dislike","dislikecount","MyPosts","React","memo","myPostInfoElements","myPostInfo","reverse","map","info","key","id","items__h1","AddNewPostReduxForm","onSubmit","values","addPost","myPostText","items__inner","maxLength","maxLengthCreator","reduxForm","form","items__form__inner","handleSubmit","Field","placeholder","name","component","Textarea","textarea","validate","required","btn","Component","ProfileStatuWithHocks","useState","editMode","seteditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateUserStatus","ProfileInfo","profile","content__img","photos","large","info__inner","logo__img","logo__img_img","small","name__inner","logo__descr","fullName","lookingForAJobDescription","MyPostsContainer","connect","state","profilePage","newPostText","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getUserStatus","compose","auth","isAutn","withRouter","WithAuthRedirect"],"mappings":"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","file":"static/js/3.7769cf71.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"ProfileInfo_info__3s5DX\",\"content__img\":\"ProfileInfo_content__img__16fD2\",\"logo__img_img\":\"ProfileInfo_logo__img_img__1yABX\",\"info__inner\":\"ProfileInfo_info__inner__38ynp\",\"logo__descr\":\"ProfileInfo_logo__descr__1fUU-\",\"name__inner\":\"ProfileInfo_name__inner__3I_Bv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"h1\":\"Profile_h1__1JOxh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"MyPosts_content__1FKsA\",\"MyPosts\":\"MyPosts_MyPosts__1gN-l\",\"items__h1\":\"MyPosts_items__h1__Wpxbo\",\"btn\":\"MyPosts_btn__1H9Mh\",\"items__form__inner\":\"MyPosts_items__form__inner__2af4E\",\"textarea\":\"MyPosts_textarea__bc1tw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MyPost_item__eX3RH\",\"items__form__inner\":\"MyPost_items__form__inner__38CBo\",\"text\":\"MyPost_text__3PjCX\",\"logo__inner\":\"MyPost_logo__inner__3rTty\",\"like__inner\":\"MyPost_like__inner__24VIu\",\"like\":\"MyPost_like__16_Ci\",\"dislike\":\"MyPost_dislike__3D0vQ\"};","import React from \"react\";\r\nimport s from \"./MyPost.module.css\";\r\n\r\nconst MyPost = (props) => {\r\n  let img = props.img;\r\n  return (\r\n    <div className={s.item}>\r\n      <div className={s.logo__inner}>\r\n        <img\r\n          src={img}\r\n          alt=\"\"\r\n        />\r\n        <h1>{props.post}</h1>\r\n      </div>\r\n\r\n      <p className={s.text}>{props.message}</p>\r\n      <div className={s.like__inner}>\r\n        <button className={s.like}>\r\n          <span>Like</span>\r\n          {props.likecount}\r\n        </button>\r\n        <button className={s.dislike}>\r\n          <span>Dislike</span>\r\n          {props.dislikecount}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyPost;\r\n","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport MyPost from \"./MyPost/MyPost\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport { required, maxLengthCreator } from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/formsControls/formsControls\";\r\n\r\n\r\n\r\n\r\n\r\nconst MyPosts = React.memo( (props) => {\r\n  let myPostInfoElements = [...props.myPostInfo].reverse().map((info) => (\r\n    <MyPost\r\n      key={info.id}\r\n      post={info.post}\r\n      id={info.id}\r\n      img={info.img}\r\n      message={info.message}\r\n      likecount={info.likecount}\r\n      dislikecount={info.dislikecount}\r\n    />\r\n  ));\r\n\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.myPostText);\r\n  };\r\n\r\n  return (\r\n    <div className={s.MyPosts}>\r\n      <h1 className={s.items__h1}> my posts </h1>\r\n      <AddNewPostReduxForm onSubmit={onAddPost} />\r\n      <div className={s.items__inner}>{myPostInfoElements}</div>\r\n    </div>\r\n  );\r\n});\r\n\r\nlet maxLength =  maxLengthCreator(10)\r\n\r\nconst addNewPostForm = (props) => {\r\n  return (\r\n    <form className={s.items__form__inner} onSubmit={props.handleSubmit}>\r\n      <Field\r\n        placeholder=\"write message\"\r\n        name={\"myPostText\"}\r\n        component={Textarea}\r\n        className={s.textarea}\r\n        validate = {[required,maxLength ] }\r\n      />\r\n      <button  className={s.btn}>\r\n        Add post\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddNewPostReduxForm = reduxForm({\r\n  form: \"myPostsForm\",\r\n})(addNewPostForm);\r\n\r\n\r\n\r\n\r\nexport default MyPosts;\r\n","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/preloader/preloader\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n  state = {\r\n    status: this.props.status,\r\n    editMode: false,\r\n  };\r\n\r\n  activateEditMode = () => {\r\n    this.setState({\r\n      editMode: true,\r\n    });\r\n  };\r\n  deActivateEditMode = () => {\r\n    this.setState({\r\n      editMode: false,\r\n    });\r\n\r\n    this.props.updateUserStatus(this.state.status);\r\n  };\r\n  onStatusChange = (e) => {\r\n    this.setState({\r\n      status: e.currentTarget.value,\r\n    });\r\n  };\r\n  componentDidUpdate(prevProps , prevState){\r\n    if (prevProps.status !== this.props.status){\r\n      this.setState({status:this.props.status})\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"\">\r\n        {!this.state.editMode && (\r\n          <div className=\"\">\r\n            <span onDoubleClick={this.activateEditMode}>\r\n              {this.props.status || \"no\"}\r\n            </span>\r\n          </div>\r\n        )}\r\n        {this.state.editMode && (\r\n          <div className=\"\">\r\n            <input\r\n              onChange={this.onStatusChange}\r\n              autoFocus={true}\r\n              onBlur={this.deActivateEditMode}\r\n              value={this.state.status}\r\n            ></input>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProfileStatus;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/preloader/preloader\";\r\n\r\nconst ProfileStatuWithHocks = (props) => {\r\n  let [editMode, seteditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect( () => {\r\n    setStatus(props.status)\r\n  },[props.status])\r\n\r\n  let activateEditMode = () => {\r\n    seteditMode(true);\r\n\r\n  };\r\n\r\n  let deActivateEditMode = () => {\r\n    seteditMode(false);\r\n    props.updateUserStatus(status);\r\n  }\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value,);\r\n  };\r\n\r\n  return (\r\n    <div className=\"\">\r\n      {!editMode && (\r\n        <div className=\"\">\r\n          <span onDoubleClick={activateEditMode}>{props.status || \"no\"}</span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div className=\"\">\r\n          <input\r\n            onChange={onStatusChange}\r\n            autoFocus={true}\r\n            onBlur={deActivateEditMode}\r\n            value={status}\r\n          ></input>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatuWithHocks;\r\n","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/preloader/preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatuWithHocks from \"./ProfileStatuWithHocks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n  if (!props.profile) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  return (\r\n    <div className={s.info}>\r\n      <div>\r\n        <img className={s.content__img} src={props.profile.photos.large}></img>\r\n      </div>\r\n      <ProfileStatuWithHocks status={props.status} updateUserStatus={props.updateUserStatus} />\r\n      <div className={s.info__inner}>\r\n        <div className={s.logo__img}>\r\n          <img\r\n            className={s.logo__img_img}\r\n            src={props.profile.photos.small}\r\n            alt=\"logo\"\r\n          />\r\n        </div>\r\n\r\n        <div className={s.name__inner}>\r\n          <h1 className={s.logo__descr}>{props.profile.fullName}</h1>\r\n          <p className={s.logo__descr}>\r\n            {props.profile.lookingForAJobDescription}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport {\r\n  addPostActionCreator,\r\n} from \"../../../redux/profilePage_reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    myPostInfo : state.profilePage.myPostInfo,\r\n    newPostText : state.profilePage.newPostText,\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n return {\r\n  addPost : (myPostText) => {\r\n    dispatch(addPostActionCreator(myPostText));\r\n  }\r\n }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps ,mapDispatchToProps) (MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\nimport s from \"./Profile.module.css\";\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <section>\r\n      <ProfileInfo\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateUserStatus={props.updateUserStatus}\r\n      />\r\n      <MyPostsContainer />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport * as Axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getUserProfile,\r\n  getUserStatus,\r\n  updateUserStatus,\r\n} from \"../../redux/profilePage_reducer\";\r\nimport { withRouter, Redirect } from \"react-router-dom\";\r\nimport { WithAuthRedirect } from \"../../hoc/WithAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if(!userId){\r\n        this.props.history.push(\"/login\")\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getUserStatus(userId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateUserStatus={this.props.updateUserStatus}\r\n      />\r\n    );\r\n  }\r\n}\r\nlet mapSateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId:state.auth.userId,\r\n  isAutn:state.auth.isAutn,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapSateToProps, { getUserProfile, getUserStatus, updateUserStatus }),\r\n  withRouter,\r\n  WithAuthRedirect   \r\n)(ProfileContainer);\r\n"],"sourceRoot":""}